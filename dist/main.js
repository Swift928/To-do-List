(()=>{"use strict";var e={426:(e,n,t)=>{t.d(n,{Z:()=>c});var o=t(537),r=t.n(o),a=t(645),i=t.n(a)()(r());i.push([e.id,"*,\nhtml,\nbody{\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n}\n\nbody{\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n}\n\n.overlay{\n    display: none;\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(0, 0, 0, 0.5); \n    z-index: 1;\n}\n\n.active {\n    display: block !important;\n}\n\n.deactivate{\n    display: none;\n}\n\n.header{\n    height: 70px;\n    background-color: black;\n    color: bisque;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 0 15px;\n}\n\nh1 {\n    font-size: 2rem;\n    display: inline-block;\n    margin: 0;\n    padding: 0;\n}\n\n.siteSvg,\n.searchSvg{\n    fill: yellow;\n    height: 30px;\n}\n\n.bodyContainer{\n    \n    display: grid; \n    grid-template-columns: 1fr 4fr;\n    /* flex-grow: 1;   */\n    height: calc(100vh - 70px);\n}\n\n.leftHeaderContainer{\n    display: flex;\n    gap: 10px;\n    flex-wrap: nowrap;\n    vertical-align: center;\n}\n\n.sideBar{\n    background-color: firebrick;\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n    padding: 20px;\n}\n\n.contentDisplay{\n    background-color: floralwhite;\n    padding: 20px;\n    overflow-y: auto;\n}\n\n.contentDisplay h3,\n.projectLinkFormTitle,\n.taskLinkFormTitle{\n    margin-bottom: 10px;\n    width: 100%;\n    padding-bottom: 5px;\n    border-bottom: 1px solid rgba(0, 0, 0, 0.6);\n}\n\n.allTasks > div {\n    margin-top: 40px;\n}\n\n\na, li {\n    list-style: none;\n    text-decoration: none;\n    color: inherit;\n    width: 100%;\n}\n\n.sideContainer :not(h2){\n    line-height: 30px;\n    font-size: 1.25rem;\n    font-weight: normal;\n}\n\n.newProjectSvg,\n.trashSvg{\n    width: 1.5rem;\n}\n\nsvg{\n    cursor: pointer;\n}\n\n/* .trashSvg{\n    height: inherit;\n} */\n\n.projectTitleContainer{\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n}\n\n[data-active-tab=false]{\n    display: none;\n}\n\n.formContainer{\n    position: absolute;\n    z-index: 1;\n    padding: 15px;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    background: burlywood;\n    height: 300px;\n    width: 300px;\n}\n\n.projectLinkSvg{\n    height: 2rem;\n}\n\n.projectOption,\n.taskOption{\n    display: none;\n}\n\n.taskOption.active{\n    display: flex !important;\n    flex-direction: column;\n    height: calc(100% - 49px);\n    justify-content: space-between;\n}\n\n.backSvg:has(svg) svg{\n    height: 2rem;\n}\n\nspan.backSvg{\n    height: 2rem;\n}\n\n.tasksContainer > div{\n    line-height: 30px;\n    margin-bottom: 10px;\n    padding: 0 10px;\n    background-color: #00000014;\n    display: flex;\n    justify-content: space-between;\n}\n\n.withSvg{\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n\ninput {\n    outline: black;\n}\n\n.highPriority{\n    background: linear-gradient(to right, #ff0000, #ff0000 5px, transparent 5px);\n}\n\n.lowPriority{\n    background: linear-gradient(to right, #037801, #037801 5px, transparent 5px);\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;;;IAGI,SAAS;IACT,UAAU;IACV,sBAAsB;IACtB,mJAAmJ;AACvJ;;AAEA;IACI,YAAY;IACZ,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,aAAa;IACb,kBAAkB;IAClB,WAAW;IACX,YAAY;IACZ,oCAAoC;IACpC,UAAU;AACd;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,YAAY;IACZ,uBAAuB;IACvB,aAAa;IACb,aAAa;IACb,8BAA8B;IAC9B,mBAAmB;IACnB,eAAe;AACnB;;AAEA;IACI,eAAe;IACf,qBAAqB;IACrB,SAAS;IACT,UAAU;AACd;;AAEA;;IAEI,YAAY;IACZ,YAAY;AAChB;;AAEA;;IAEI,aAAa;IACb,8BAA8B;IAC9B,oBAAoB;IACpB,0BAA0B;AAC9B;;AAEA;IACI,aAAa;IACb,SAAS;IACT,iBAAiB;IACjB,sBAAsB;AAC1B;;AAEA;IACI,2BAA2B;IAC3B,aAAa;IACb,sBAAsB;IACtB,SAAS;IACT,aAAa;AACjB;;AAEA;IACI,6BAA6B;IAC7B,aAAa;IACb,gBAAgB;AACpB;;AAEA;;;IAGI,mBAAmB;IACnB,WAAW;IACX,mBAAmB;IACnB,2CAA2C;AAC/C;;AAEA;IACI,gBAAgB;AACpB;;;AAGA;IACI,gBAAgB;IAChB,qBAAqB;IACrB,cAAc;IACd,WAAW;AACf;;AAEA;IACI,iBAAiB;IACjB,kBAAkB;IAClB,mBAAmB;AACvB;;AAEA;;IAEI,aAAa;AACjB;;AAEA;IACI,eAAe;AACnB;;AAEA;;GAEG;;AAEH;IACI,aAAa;IACb,mBAAmB;IACnB,8BAA8B;AAClC;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,kBAAkB;IAClB,UAAU;IACV,aAAa;IACb,QAAQ;IACR,SAAS;IACT,gCAAgC;IAChC,qBAAqB;IACrB,aAAa;IACb,YAAY;AAChB;;AAEA;IACI,YAAY;AAChB;;AAEA;;IAEI,aAAa;AACjB;;AAEA;IACI,wBAAwB;IACxB,sBAAsB;IACtB,yBAAyB;IACzB,8BAA8B;AAClC;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,iBAAiB;IACjB,mBAAmB;IACnB,eAAe;IACf,2BAA2B;IAC3B,aAAa;IACb,8BAA8B;AAClC;;AAEA;IACI,aAAa;IACb,8BAA8B;IAC9B,mBAAmB;AACvB;;AAEA;IACI,cAAc;AAClB;;AAEA;IACI,4EAA4E;AAChF;;AAEA;IACI,4EAA4E;AAChF",sourcesContent:["*,\nhtml,\nbody{\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n}\n\nbody{\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n}\n\n.overlay{\n    display: none;\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(0, 0, 0, 0.5); \n    z-index: 1;\n}\n\n.active {\n    display: block !important;\n}\n\n.deactivate{\n    display: none;\n}\n\n.header{\n    height: 70px;\n    background-color: black;\n    color: bisque;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 0 15px;\n}\n\nh1 {\n    font-size: 2rem;\n    display: inline-block;\n    margin: 0;\n    padding: 0;\n}\n\n.siteSvg,\n.searchSvg{\n    fill: yellow;\n    height: 30px;\n}\n\n.bodyContainer{\n    \n    display: grid; \n    grid-template-columns: 1fr 4fr;\n    /* flex-grow: 1;   */\n    height: calc(100vh - 70px);\n}\n\n.leftHeaderContainer{\n    display: flex;\n    gap: 10px;\n    flex-wrap: nowrap;\n    vertical-align: center;\n}\n\n.sideBar{\n    background-color: firebrick;\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n    padding: 20px;\n}\n\n.contentDisplay{\n    background-color: floralwhite;\n    padding: 20px;\n    overflow-y: auto;\n}\n\n.contentDisplay h3,\n.projectLinkFormTitle,\n.taskLinkFormTitle{\n    margin-bottom: 10px;\n    width: 100%;\n    padding-bottom: 5px;\n    border-bottom: 1px solid rgba(0, 0, 0, 0.6);\n}\n\n.allTasks > div {\n    margin-top: 40px;\n}\n\n\na, li {\n    list-style: none;\n    text-decoration: none;\n    color: inherit;\n    width: 100%;\n}\n\n.sideContainer :not(h2){\n    line-height: 30px;\n    font-size: 1.25rem;\n    font-weight: normal;\n}\n\n.newProjectSvg,\n.trashSvg{\n    width: 1.5rem;\n}\n\nsvg{\n    cursor: pointer;\n}\n\n/* .trashSvg{\n    height: inherit;\n} */\n\n.projectTitleContainer{\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n}\n\n[data-active-tab=false]{\n    display: none;\n}\n\n.formContainer{\n    position: absolute;\n    z-index: 1;\n    padding: 15px;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    background: burlywood;\n    height: 300px;\n    width: 300px;\n}\n\n.projectLinkSvg{\n    height: 2rem;\n}\n\n.projectOption,\n.taskOption{\n    display: none;\n}\n\n.taskOption.active{\n    display: flex !important;\n    flex-direction: column;\n    height: calc(100% - 49px);\n    justify-content: space-between;\n}\n\n.backSvg:has(svg) svg{\n    height: 2rem;\n}\n\nspan.backSvg{\n    height: 2rem;\n}\n\n.tasksContainer > div{\n    line-height: 30px;\n    margin-bottom: 10px;\n    padding: 0 10px;\n    background-color: #00000014;\n    display: flex;\n    justify-content: space-between;\n}\n\n.withSvg{\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n\ninput {\n    outline: black;\n}\n\n.highPriority{\n    background: linear-gradient(to right, #ff0000, #ff0000 5px, transparent 5px);\n}\n\n.lowPriority{\n    background: linear-gradient(to right, #037801, #037801 5px, transparent 5px);\n}"],sourceRoot:""}]);const c=i},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",o=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),o&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),o&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,o,r,a){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(o)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(i[s]=!0)}for(var l=0;l<e.length;l++){var A=[].concat(e[l]);o&&i[A[0]]||(void 0!==a&&(void 0===A[5]||(A[1]="@layer".concat(A[5].length>0?" ".concat(A[5]):""," {").concat(A[1],"}")),A[5]=a),t&&(A[2]?(A[1]="@media ".concat(A[2]," {").concat(A[1],"}"),A[2]=t):A[2]=t),r&&(A[4]?(A[1]="@supports (".concat(A[4],") {").concat(A[1],"}"),A[4]=r):A[4]="".concat(r)),n.push(A))}},n}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),a="/*# ".concat(r," */");return[n].concat([a]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,o=0;o<n.length;o++)if(n[o].identifier===e){t=o;break}return t}function o(e,o){for(var a={},i=[],c=0;c<e.length;c++){var s=e[c],l=o.base?s[0]+o.base:s[0],A=a[l]||0,d="".concat(l," ").concat(A);a[l]=A+1;var p=t(d),u={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==p)n[p].references++,n[p].updater(u);else{var m=r(u,o);o.byIndex=c,n.splice(c,0,{identifier:d,updater:m,references:1})}i.push(d)}return i}function r(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,r){var a=o(e=e||[],r=r||{});return function(e){e=e||[];for(var i=0;i<a.length;i++){var c=t(a[i]);n[c].references--}for(var s=o(e,r),l=0;l<a.length;l++){var A=t(a[l]);0===n[A].references&&(n[A].updater(),n.splice(A,1))}a=s}}},569:e=>{var n={};e.exports=function(e,t){var o=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),n.styleTagTransform(o,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(o){var r=n[o];if(void 0!==r)return r.exports;var a=n[o]={id:o,exports:{}};return e[o](a,a.exports,t),a.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var o in n)t.o(n,o)&&!t.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:n[o]})},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),t.nc=void 0;var o={};(()=>{t.d(o,{j:()=>E,$:()=>w});var e=t(379),n=t.n(e),r=t(795),a=t.n(r),i=t(569),c=t.n(i),s=t(565),l=t.n(s),A=t(216),d=t.n(A),p=t(589),u=t.n(p),m=t(426),g={};function f(){let e=document.querySelector(".taskLinkFormTitle");e.classList.toggle("withSvg"),e.appendChild(I)}function h(){let e=document.querySelector(".taskLinkFormTitle");if(e){const n=e.innerHTML,t=n.indexOf(" "),o=n.indexOf("<");if(-1!==t&&-1!==o)return n.substring(t+1,o)}return""}function y(){document.querySelector(".overlay").classList.toggle("active")}function C(){const e=document.querySelector(".contentDisplay");let n=e.querySelector(".formContainer");n.querySelectorAll("input").forEach((e=>{e.value=""})),e.removeChild(n)}function v(e){e.target.classList.contains("newProjectButton")&&(e.preventDefault(),function(){let e=document.querySelector(".projectNameInput").value.trim();e&&(function(e){let n=!1;for(let t of L)t.projectName===e&&(n=!0);n||L.push(new b(e))}(e),y(),C(),E())}())}function k(){document.querySelector(".linkOptions").classList.toggle("deactivate")}function B(){const e=document.createElementNS("http://www.w3.org/2000/svg","svg");e.classList.add("trashSvg"),e.setAttribute("xmlns","http://www.w3.org/2000/svg"),e.setAttribute("viewBox","0 0 24 24");const n=document.createElementNS("http://www.w3.org/2000/svg","path");return n.setAttribute("d","M9,3V4H4V6H5V19A2,2 0 0,0 7,21H17A2,2 0 0,0 19,19V6H20V4H15V3H9M7,6H17V19H7V6M9,8V17H11V8H9M13,8V17H15V8H13Z"),e.appendChild(n),e}g.styleTagTransform=u(),g.setAttributes=l(),g.insert=c().bind(null,"head"),g.domAPI=a(),g.insertStyleElement=d(),n()(m.Z,g),m.Z&&m.Z.locals&&m.Z.locals;let I=document.createElement("span");I.classList.add("backSvg"),I.innerHTML='\n  <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">\n    <path d="M2,12A10,10 0 0,1 12,2A10,10 0 0,1 22,12A10,10 0 0,1 12,22A10,10 0 0,1 2,12M18,11H10L13.5,7.5L12.08,6.08L6.16,12L12.08,17.92L13.5,16.5L10,13H18V11Z" />\n</svg>',document.querySelector(".contentDisplay").addEventListener("click",(e=>{e.target.classList.contains("trashSvg")&&w("taskLinkForm.html",(()=>{document.querySelector(".taskLinkFormTitle").textContent=`Task: ${e.target.closest("div").querySelector("a").textContent}`,y();let n=document.querySelector(".deleteTaskLink"),t=new MouseEvent("click",{bubbles:!0,cancelable:!0,view:window});n.dispatchEvent(t)}))}));class b{constructor(e){this._name=e,this._tasks=[new x("Family"),new x("Apple"),new x("Destiny")]}get projectName(){return this._name}get tasks(){return this._tasks}addTask(e,n){const t=new x(e,n);this._tasks.push(t)}renameProject(e){this._name=e}removeTask(e){this._tasks=this._tasks.filter((n=>n.taskName!==e))}}class x{constructor(e,n){this._name=e,this._priority=n}get taskName(){return this._name}get priorityLevel(){return this._priority}changePriority(e){this._priority=e}renameTask(e){this._name=e}addNotes(e){}}let L=[new b("Family"),new b("Shopping"),new b("Education"),new b("Gym")];function S(e){let n=document.createElement("div");n.classList.add("projectTaskContainer");let t=document.createElement("h3");return t.innerHTML=e.projectName,n.append(t),n.append(function(e){let n=document.createElement("div");n.classList.add("tasksContainer");for(let t of e.tasks){let e=document.createElement("div"),o=document.createElement("a");o.setAttribute("href","#"),o.classList.add("taskItem"),"high"===t.priorityLevel?e.classList.toggle("highPriority"):"low"===t.priorityLevel&&e.classList.toggle("lowPriority"),o.innerHTML=t.taskName,e.appendChild(o),e.appendChild(B()),n.appendChild(e)}return n}(e)),n}function w(e,n=void 0){fetch(`../src/${e}`).then((e=>e.text())).then((e=>{document.querySelector(".contentDisplay").innerHTML+=e,n&&n()})).catch((e=>console.error(e)))}function E(){!function(){let e=document.querySelector(".allTasks");e.innerHTML="";for(let n of L)e.appendChild(S(n))}(),function(){let e=document.querySelector(".projectNameLinksContainer");e.innerHTML="";for(let n of L){let t=document.createElement("li"),o=document.createElement("a");o.setAttribute("href","#"),o.classList.add("projectNameLink"),o.innerHTML=n.projectName,t.append(o),e.appendChild(t)}}()}E(),I.addEventListener("click",(()=>{k();const e=document.querySelectorAll(".taskOption");let n=document.querySelector(".taskLinkFormTitle");n.classList.toggle("withSvg"),n.removeChild(I),e.forEach((e=>{e.classList.remove("active")}))})),document.querySelector(".newProjectSvg").addEventListener("click",(()=>{y(),w("newProjectSvg.html"),document.body.addEventListener("click",v)})),document.querySelector(".overlay").addEventListener("click",(()=>{y(),C()})),document.querySelector(".projectNameLinksContainer").addEventListener("click",(e=>{e.target.classList.contains("projectNameLink")&&w("projectLinkForm.html",(()=>{document.querySelector(".projectLinkFormTitle").textContent=`Project: ${e.target.textContent}`,y()}))})),document.querySelector(".contentDisplay").addEventListener("click",(e=>{e.target.classList.contains("taskItem")&&w("taskLinkForm.html",(()=>{document.querySelector(".taskLinkFormTitle").textContent=`Task: ${e.target.textContent}`,y()}))})),function(){let e=document.querySelector(".contentDisplay"),n="";e.addEventListener("click",(e=>{if(e.target.closest(".projectTaskContainer")&&(n=e.target.closest(".projectTaskContainer").querySelector("h3").textContent),e.target.classList.contains("changePriorityButton")){let e=h();for(let t of L)if(t.projectName===n){let n=t;for(let t of n.tasks)if(t.taskName===e){const e=document.querySelectorAll('input[name="priority"]');let n="";if(e.forEach((function(e){e.checked&&(n=e.value)})),!n)return;t.changePriority(n),y(),C(),E()}}}}))}(),function(){let e=document.querySelector(".contentDisplay"),n="";e.addEventListener("click",(e=>{if(e.target.closest(".projectTaskContainer")&&(n=e.target.closest(".projectTaskContainer").querySelector("h3").textContent),e.target.classList.contains("renameTaskButton")){let e=h();for(let t of L)if(t.projectName===n){let n=t;for(let t of n.tasks)if(t.taskName===e){let e=document.getElementById("renameTaskInput").value;if(!e)return;t.renameTask(e),y(),C(),E()}}}}))}(),function(){let e=document.querySelector(".contentDisplay"),n="";e.addEventListener("click",(e=>{if(e.target.closest(".projectTaskContainer")&&(n=e.target.closest(".projectTaskContainer").querySelector("h3").textContent),e.target.classList.contains("deleteTaskButton")){let e=h();for(let t of L)if(t.projectName===n){if(!document.querySelector(".deleteTask").checked)return;t.removeTask(e),y(),C(),E()}}}))}(),document.querySelector(".contentDisplay").addEventListener("click",(e=>{switch(!0){case e.target.classList.contains("changePriorityLink"):document.querySelector(".changePriorityOption").classList.toggle("active"),f(),k();break;case e.target.classList.contains("renameTaskLink"):document.querySelector(".renameTaskOption").classList.toggle("active"),f(),k();break;case e.target.classList.contains("addNotesLink"):document.querySelector(".addNotesOption").classList.toggle("active"),f(),k();break;case e.target.classList.contains("deleteTaskLink"):document.querySelector(".deleteTaskOption").classList.toggle("active"),f(),k()}})),document.querySelector(".contentDisplay").addEventListener("click",(e=>{if(e.target.classList.contains("addTaskButton")){let e=document.querySelector(".projectLinkFormTitle").innerHTML.split(" ")[1];for(let n of L)if(n.projectName===e){let e=document.getElementById("newTaskInput").value.trim();const t=document.querySelectorAll('input[name="priority"]');let o="";if(t.forEach((function(e){e.checked&&(o=e.value)})),!e||!o)return;n.addTask(e,o),y(),C(),E()}}})),document.querySelector(".contentDisplay").addEventListener("click",(e=>{if(e.target.classList.contains("renameProjectButton")){let e=document.querySelector(".projectLinkFormTitle").innerHTML.split(" ")[1];for(let n of L)if(n.projectName===e){let e=document.getElementById("renameProjectInput").value.trim();if(!e)return;n.renameProject(e),y(),C(),E()}}})),document.querySelector(".contentDisplay").addEventListener("click",(e=>{if(e.target.classList.contains("deleteProjectButton")){if(!document.querySelector(".deleteProject").checked)return;let e=document.querySelector(".projectLinkFormTitle").innerHTML.split(" ")[1];L=L.filter((n=>n.projectName!==e)),y(),C(),E()}})),document.querySelector(".contentDisplay").addEventListener("click",(e=>{switch(!0){case e.target.classList.contains("addTaskLink"):document.querySelector(".addTaskOption").classList.toggle("active"),k();break;case e.target.classList.contains("renameProjectLink"):document.querySelector(".renameProjectOption").classList.toggle("active"),k();break;case e.target.classList.contains("deleteProjectLink"):document.querySelector(".deleteOption").classList.toggle("active"),k()}}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,